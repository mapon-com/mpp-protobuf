<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mpp/mpp.proto

namespace Mpp;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 *Top-level MPP message with variable payload.
 *
 * Generated from protobuf message <code>mpp.Msg</code>
 */
class Msg extends \Google\Protobuf\Internal\Message
{
    /**
     * payload type
     *
     * Generated from protobuf field <code>.mpp.Msg.PayloadType payload_type = 1;</code>
     */
    protected $payload_type = 0;
    protected $payload;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $payload_type
     *           payload type
     *     @type \Mpp\SessionBegin $session_begin
     *     @type \Mpp\SessionEnd $session_end
     *     @type \Mpp\Samples $samples
     *     @type \Mpp\SymbolInval $symbol_inval
     *     @type \Mpp\SamplingStart $sampling_start
     *     @type \Mpp\SamplingStop $sampling_stop
     *     @type \Mpp\MarkOrientation $mark_orientation
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Mpp\Mpp::initOnce();
        parent::__construct($data);
    }

    /**
     * payload type
     *
     * Generated from protobuf field <code>.mpp.Msg.PayloadType payload_type = 1;</code>
     * @return int
     */
    public function getPayloadType()
    {
        return $this->payload_type;
    }

    /**
     * payload type
     *
     * Generated from protobuf field <code>.mpp.Msg.PayloadType payload_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setPayloadType($var)
    {
        GPBUtil::checkEnum($var, \Mpp\Msg\PayloadType::class);
        $this->payload_type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.mpp.SessionBegin session_begin = 2;</code>
     * @return \Mpp\SessionBegin|null
     */
    public function getSessionBegin()
    {
        return $this->readOneof(2);
    }

    public function hasSessionBegin()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.mpp.SessionBegin session_begin = 2;</code>
     * @param \Mpp\SessionBegin $var
     * @return $this
     */
    public function setSessionBegin($var)
    {
        GPBUtil::checkMessage($var, \Mpp\SessionBegin::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.mpp.SessionEnd session_end = 3;</code>
     * @return \Mpp\SessionEnd|null
     */
    public function getSessionEnd()
    {
        return $this->readOneof(3);
    }

    public function hasSessionEnd()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.mpp.SessionEnd session_end = 3;</code>
     * @param \Mpp\SessionEnd $var
     * @return $this
     */
    public function setSessionEnd($var)
    {
        GPBUtil::checkMessage($var, \Mpp\SessionEnd::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.mpp.Samples samples = 4;</code>
     * @return \Mpp\Samples|null
     */
    public function getSamples()
    {
        return $this->readOneof(4);
    }

    public function hasSamples()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.mpp.Samples samples = 4;</code>
     * @param \Mpp\Samples $var
     * @return $this
     */
    public function setSamples($var)
    {
        GPBUtil::checkMessage($var, \Mpp\Samples::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.mpp.SymbolInval symbol_inval = 5;</code>
     * @return \Mpp\SymbolInval|null
     */
    public function getSymbolInval()
    {
        return $this->readOneof(5);
    }

    public function hasSymbolInval()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.mpp.SymbolInval symbol_inval = 5;</code>
     * @param \Mpp\SymbolInval $var
     * @return $this
     */
    public function setSymbolInval($var)
    {
        GPBUtil::checkMessage($var, \Mpp\SymbolInval::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.mpp.SamplingStart sampling_start = 6;</code>
     * @return \Mpp\SamplingStart|null
     */
    public function getSamplingStart()
    {
        return $this->readOneof(6);
    }

    public function hasSamplingStart()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.mpp.SamplingStart sampling_start = 6;</code>
     * @param \Mpp\SamplingStart $var
     * @return $this
     */
    public function setSamplingStart($var)
    {
        GPBUtil::checkMessage($var, \Mpp\SamplingStart::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.mpp.SamplingStop sampling_stop = 7;</code>
     * @return \Mpp\SamplingStop|null
     */
    public function getSamplingStop()
    {
        return $this->readOneof(7);
    }

    public function hasSamplingStop()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.mpp.SamplingStop sampling_stop = 7;</code>
     * @param \Mpp\SamplingStop $var
     * @return $this
     */
    public function setSamplingStop($var)
    {
        GPBUtil::checkMessage($var, \Mpp\SamplingStop::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.mpp.MarkOrientation mark_orientation = 8;</code>
     * @return \Mpp\MarkOrientation|null
     */
    public function getMarkOrientation()
    {
        return $this->readOneof(8);
    }

    public function hasMarkOrientation()
    {
        return $this->hasOneof(8);
    }

    /**
     * Generated from protobuf field <code>.mpp.MarkOrientation mark_orientation = 8;</code>
     * @param \Mpp\MarkOrientation $var
     * @return $this
     */
    public function setMarkOrientation($var)
    {
        GPBUtil::checkMessage($var, \Mpp\MarkOrientation::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getPayload()
    {
        return $this->whichOneof("payload");
    }

}


<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mpp/mpp.proto

namespace Mpp\Samples;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * individual sample
 *
 * Generated from protobuf message <code>mpp.Samples.Sample</code>
 */
class Sample extends \Google\Protobuf\Internal\Message
{
    /**
     * timestamp (UTC, Unix epoch, ms)
     *
     * Generated from protobuf field <code>uint64 utc_timestamp = 1;</code>
     */
    protected $utc_timestamp = 0;
    /**
     * symbol values as continuous buffer
     *
     * Generated from protobuf field <code>bytes symbol_values = 2;</code>
     */
    protected $symbol_values = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $utc_timestamp
     *           timestamp (UTC, Unix epoch, ms)
     *     @type string $symbol_values
     *           symbol values as continuous buffer
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Mpp\Mpp::initOnce();
        parent::__construct($data);
    }

    /**
     * timestamp (UTC, Unix epoch, ms)
     *
     * Generated from protobuf field <code>uint64 utc_timestamp = 1;</code>
     * @return int|string
     */
    public function getUtcTimestamp()
    {
        return $this->utc_timestamp;
    }

    /**
     * timestamp (UTC, Unix epoch, ms)
     *
     * Generated from protobuf field <code>uint64 utc_timestamp = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setUtcTimestamp($var)
    {
        GPBUtil::checkUint64($var);
        $this->utc_timestamp = $var;

        return $this;
    }

    /**
     * symbol values as continuous buffer
     *
     * Generated from protobuf field <code>bytes symbol_values = 2;</code>
     * @return string
     */
    public function getSymbolValues()
    {
        return $this->symbol_values;
    }

    /**
     * symbol values as continuous buffer
     *
     * Generated from protobuf field <code>bytes symbol_values = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSymbolValues($var)
    {
        GPBUtil::checkString($var, False);
        $this->symbol_values = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Sample::class, \Mpp\Samples_Sample::class);


<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mpp/mpp.proto

namespace Mpp\Msg;

use UnexpectedValueException;

/**
 * payload types
 *
 * Protobuf type <code>mpp.Msg.PayloadType</code>
 */
class PayloadType
{
    /**
     * Generated from protobuf enum <code>NONE = 0;</code>
     */
    const NONE = 0;
    /**
     * Generated from protobuf enum <code>SESSION_BEGIN = 1;</code>
     */
    const SESSION_BEGIN = 1;
    /**
     * Generated from protobuf enum <code>SESSION_END = 2;</code>
     */
    const SESSION_END = 2;
    /**
     * Generated from protobuf enum <code>SAMPLES = 3;</code>
     */
    const SAMPLES = 3;
    /**
     * Generated from protobuf enum <code>SYMBOL_INVAL = 4;</code>
     */
    const SYMBOL_INVAL = 4;
    /**
     * Generated from protobuf enum <code>RT_SAMPLING_START = 5;</code>
     */
    const RT_SAMPLING_START = 5;
    /**
     * Generated from protobuf enum <code>RT_SAMPLING_STOP = 6;</code>
     */
    const RT_SAMPLING_STOP = 6;
    /**
     * Generated from protobuf enum <code>MARK_ORIENTATION = 7;</code>
     */
    const MARK_ORIENTATION = 7;

    private static $valueToName = [
        self::NONE => 'NONE',
        self::SESSION_BEGIN => 'SESSION_BEGIN',
        self::SESSION_END => 'SESSION_END',
        self::SAMPLES => 'SAMPLES',
        self::SYMBOL_INVAL => 'SYMBOL_INVAL',
        self::RT_SAMPLING_START => 'RT_SAMPLING_START',
        self::RT_SAMPLING_STOP => 'RT_SAMPLING_STOP',
        self::MARK_ORIENTATION => 'MARK_ORIENTATION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PayloadType::class, \Mpp\Msg_PayloadType::class);


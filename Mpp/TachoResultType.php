<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: mpp.proto

namespace Mpp;

use UnexpectedValueException;

/**
 * tachograph result codes
 *
 * Protobuf type <code>mpp.TachoResultType</code>
 */
class TachoResultType
{
    /**
     * success
     *
     * Generated from protobuf enum <code>OK = 0;</code>
     */
    const OK = 0;
    /**
     * unknown error
     *
     * Generated from protobuf enum <code>UNKNOWN_ERR = 1;</code>
     */
    const UNKNOWN_ERR = 1;
    /**
     * cancelled
     *
     * Generated from protobuf enum <code>CANCELLED = 2;</code>
     */
    const CANCELLED = 2;
    /**
     * subsystem is disabled
     *
     * Generated from protobuf enum <code>DISABLED = 3;</code>
     */
    const DISABLED = 3;
    /**
     * timeout
     *
     * Generated from protobuf enum <code>TIMEOUT = 4;</code>
     */
    const TIMEOUT = 4;
    /**
     * subsystem is busy
     *
     * Generated from protobuf enum <code>BUSY = 5;</code>
     */
    const BUSY = 5;
    /**
     * incorrect session ID
     *
     * Generated from protobuf enum <code>WRONG_SESSION = 6;</code>
     */
    const WRONG_SESSION = 6;
    /**
     * parameter error	
     *
     * Generated from protobuf enum <code>PARAM_ERR = 7;</code>
     */
    const PARAM_ERR = 7;
    /**
     * unexcpected action
     *
     * Generated from protobuf enum <code>NOT_EXPECTED = 8;</code>
     */
    const NOT_EXPECTED = 8;
    /**
     * no connection to VU
     *
     * Generated from protobuf enum <code>NO_CONNECTION = 9;</code>
     */
    const NO_CONNECTION = 9;
    /**
     * authentication failed
     *
     * Generated from protobuf enum <code>AUTH_FAILED = 10;</code>
     */
    const AUTH_FAILED = 10;
    /**
     * no data
     *
     * Generated from protobuf enum <code>NO_DATA = 11;</code>
     */
    const NO_DATA = 11;
    /**
     * not found
     *
     * Generated from protobuf enum <code>NOT_FOUND = 12;</code>
     */
    const NOT_FOUND = 12;

    private static $valueToName = [
        self::OK => 'OK',
        self::UNKNOWN_ERR => 'UNKNOWN_ERR',
        self::CANCELLED => 'CANCELLED',
        self::DISABLED => 'DISABLED',
        self::TIMEOUT => 'TIMEOUT',
        self::BUSY => 'BUSY',
        self::WRONG_SESSION => 'WRONG_SESSION',
        self::PARAM_ERR => 'PARAM_ERR',
        self::NOT_EXPECTED => 'NOT_EXPECTED',
        self::NO_CONNECTION => 'NO_CONNECTION',
        self::AUTH_FAILED => 'AUTH_FAILED',
        self::NO_DATA => 'NO_DATA',
        self::NOT_FOUND => 'NOT_FOUND',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

